@model IEnumerable<ShishaBuilder.Core.Models.Tobacco>
@{
    var hookahId = (int)ViewData["HookahId"];
    var brands=(IEnumerable<string>)ViewData["Brands"];
}

<div class="container py-3">
    <h2 class="text-center mb-4">Customize Your Hookah Mix</h2>

    <div class="filter-panel">
        <div class="input-group">
            <label class="input-group-text" for="brandFilter">Brand:</label>
            <select id="brandFilter" class="form-select">
                <option value="All">All Brands</option>
                @foreach (var brand in brands)
                {
                    <option value="@brand">@brand</option>
                }
            </select>
        </div>

        <div class="input-group">
            <label class="input-group-text" for="strengthFilter">Strength:</label>
            <select id="strengthFilter" class="form-select">
                <option value="All">All strengths</option>
                <option value="None">None</option>
                <option value="Light">Light</option>
                <option value="Medium">Medium</option>
                <option value="Strong">Strong</option>
                <option value="ExtraStrong">Extra strong</option>
            </select>
        </div>

        <button type="button" id="filterSelected" class="btn btn-outline-success">
            Selected
        </button>
    </div>

</div>
    
    <form asp-action="PreviewOrder" method="get" class="mb-4">
        <input type="hidden" name="hookahId" value="@hookahId" />
        <input type="hidden" name="tableNumber" value="@ViewData["TableNumber"]" />
        
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var tobacco in Model)
            {
                <div class="col">
                    <div class="card h-100 tobacco-card" data-strength="@tobacco.Strength" data-brand="@tobacco.Brand">
                        <div style="height: 300px; overflow: hidden;">
                            <img src="@tobacco.ImageUrl" class="card-img-top h-100 w-100 object-fit-cover" alt="@tobacco.Name">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@tobacco.Name</h5>
                            <p class="card-text text-muted small mb-2">
                                @tobacco.Brand ‚Ä¢ @tobacco.Flavor ‚Ä¢ @tobacco.Strength
                            </p>
                            <p class="tobacco-selection-rate small mb-2">
                                This tobacco is chosen by approximately <strong>@tobacco.SelectionRate.ToString("0.0")%</strong> of customers
                            </p>

                            <div class="btn-group w-100">
                                @foreach (var percent in new[] { 25, 50, 75, 100 })
                                {
                                    <button type="button" class="btn btn-sm btn-outline-secondary percentage-btn"
                                            data-tobaccoid="@tobacco.Id" data-percent="@percent">
                                        @percent%
                                    </button>
                                }
                            </div>
                            <input type="hidden" name="tobaccoPercentages[@tobacco.Id]" 
                                   id="tobacco-@tobacco.Id" value="0">
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="sticky-bottom bg-white p-3 shadow mt-4">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col">
                        <div class="d-flex align-items-center">
                            <strong class="me-2">Total:</strong>
                            <span id="totalPercent" class="badge bg-primary">0%</span>
                            <span id="percentError" class="text-danger small ms-2"></span>
                        </div>
                    </div>
                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary px-4" id="submitBtn" disabled>
                            <i class="fas fa-arrow-right me-2"></i>Continue
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>


<style>

.filter-panel {
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 12px;
    padding: 16px;
    display: flex;
    gap: 16px;
    flex-wrap: wrap;
    justify-content: flex-end;
    align-items: center;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    margin-bottom: 24px;
}

.filter-panel .input-group {
    width: 200px;
}

.filter-panel label {
    font-size: 0.85rem;
    background-color: #fff;
    border-right: 0;
}

.filter-panel .form-select {
    font-size: 0.85rem;
}

.filter-panel .btn {
    font-size: 0.85rem;
    padding: 6px 16px;
    border-radius: 8px;
}



#strengthFilter {
    padding: 0.375rem 0.75rem;
    border: 1px solid #ced4da;
    font-size: 0.875rem;
    color: #495057;
    background-color: #fff;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 16px 12px;
    appearance: none;
}

#strengthFilter:focus {
    border-color: #adb5bd;
    outline: 0;
    box-shadow: none;
}

.input-group-text {
    font-size: 0.875rem;
    border-right: none;
    background-color: #f8f9fa;
}
.tobacco-selection-rate {
    font-style: italic;
    color: #b83110; /* –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π */
}
</style>

@section Scripts {
<script>
    document.querySelectorAll('.percentage-btn').forEach(btn => {
        btn.addEventListener('click', function () {
            const tobaccoId = this.dataset.tobaccoid;
            const percent = parseInt(this.dataset.percent);
            const input = document.getElementById(`tobacco-${tobaccoId}`);

            if (parseInt(input.value) === percent) {
                input.value = 0;
                this.classList.remove('btn-primary');
                this.classList.add('btn-outline-secondary');
            } else {
                document.querySelectorAll(`.percentage-btn[data-tobaccoid="${tobaccoId}"]`)
                    .forEach(b => {
                        b.classList.remove('btn-primary');
                        b.classList.add('btn-outline-secondary');
                    });

                input.value = percent;
                this.classList.add('btn-primary');
                this.classList.remove('btn-outline-secondary');
            }

            updateTotal();
        });
    });

    function updateTotal() {
        const inputs = document.querySelectorAll('input[id^="tobacco-"]');
        let total = 0;

        inputs.forEach(input => {
            total += parseInt(input.value) || 0;
        });

        const totalElement = document.getElementById('totalPercent');
        const errorElement = document.getElementById('percentError');
        const submitBtn = document.getElementById('submitBtn');

        totalElement.textContent = `${total}%`;
        totalElement.className = `badge ${total === 100 ? 'bg-success' : 'bg-primary'}`;

        if (total > 100) {
            errorElement.textContent = 'Cannot exceed 100%';
            submitBtn.disabled = true;
        } else if (total < 100) {
            errorElement.textContent = 'Select 100% total';
            submitBtn.disabled = true;
        } else {
            errorElement.textContent = '';
            submitBtn.disabled = false;

            document.getElementById('submitBtn').scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    }

    // üîÑ –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ Strength + Brand
    const brandSelect = document.getElementById('brandFilter');
    const strengthSelect = document.getElementById('strengthFilter');
    const cards = document.querySelectorAll('.tobacco-card');

    function applyFilters() {
        const selectedBrand = brandSelect.value;
        const selectedStrength = strengthSelect.value;

        cards.forEach(card => {
            const cardBrand = card.dataset.brand;
            const cardStrength = card.dataset.strength;

            const matchBrand = selectedBrand === 'All' || cardBrand === selectedBrand;
            const matchStrength = selectedStrength === 'All' || cardStrength === selectedStrength;

            card.parentElement.style.display = (matchBrand && matchStrength) ? 'block' : 'none';
        });
    }

    brandSelect.addEventListener('change', applyFilters);
    strengthSelect.addEventListener('change', applyFilters);

    let selectedFilterActive = false;

    document.getElementById('filterSelected').addEventListener('click', function () {
        if (!selectedFilterActive) {
            cards.forEach(card => {
                const input = card.querySelector('input[type="hidden"]');
                const value = parseInt(input.value) || 0;
                card.parentElement.style.display = value > 0 ? 'block' : 'none';
            });

            this.classList.remove('btn-outline-success');
            this.classList.add('btn-success');
            this.textContent = 'Show All';
            selectedFilterActive = true;
        } else {
            applyFilters(); // –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ –±—Ä–µ–Ω–¥—É –∏ –∫—Ä–µ–ø–æ—Å—Ç–∏
            this.classList.remove('btn-success');
            this.classList.add('btn-outline-success');
            this.textContent = 'Selected';
            selectedFilterActive = false;
        }
    });
</script>
}
